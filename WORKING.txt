
# mysql steps for data aggregation
create database repairs;
use repairs;
create table repairs (borough varchar(50), development_name varchar(50), street_address varchar(50), work_order_num varchar(50), repair_category varchar(50), item_detail varchar(50), date_reported varchar(50), days_outstanding varchar(50), state varchar(50), full_address varchar(50));
LOAD DATA INFILE "/repairs.csv" INTO TABLE repairs FIELDS TERMINATED BY "," enclosed by '"' (borough, development_name, street_address, repair_category, item_detail, date_reported, days_outstanding);
delete from repairs where repair_category = 'REPAIR CATEGORY';

create table buildings (development_name varchar(50), street_address varchar(50), borough varchar(50), full_address varchar(50), total int(13), avg_days float(13));
insert into buildings (development_name, street_address, borough, full_address, total, avg_days)
SELECT development_name, street_address, borough, full_address, count(*), SUM(days_outstanding)/count(*)  FROM `repairs` group by development_name;

create table categories (repair_category varchar(50), total int(13), avg_days float(13));
insert into categories (repair_category, total, avg_days)
SELECT repair_category, count(*), SUM(days_outstanding)/count(*)  FROM `repairs` group by repair_category;

create table boroughs (borough varchar(50), total int(13), avg_days float(13));
insert into boroughs (borough, total, avg_days)
SELECT borough, count(*), SUM(days_outstanding)/count(*)  FROM `repairs` group by borough;



# Import repairs table (from source) into Google Fusion tables (use personal Gmail)
#   change DEVELOPMENT NAME, ADDRESS, REPAIR CATEGORY, ITEM DETAIL to type > text
# With buildings
#   create full_address field by adding state in G and using =CONCATENATE(A2, ", ", B2, ", ", C2)
#   import into google docs
#   and geocode the buildings table with https://github.com/mapbox/geo-googledocs
#   import into Fusion tables